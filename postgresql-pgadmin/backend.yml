apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: klerith/k8s-teslo-backend:1.1.0
        ports:
        - containerPort: 3000
        env:
        - name: APP_VERSION
          value: "1.1.0"
        - name: PORT
          value: "3000"
        - name: STAGE
          value: "prod"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: postgres-config # Referencia a "postgres-config.yml"
              key: DB_NAME          # Llave de "postgres-config.yml"
        - name: DB_HOST             # Referencia a "postgres-config.yml"
          valueFrom:
            configMapKeyRef:
              name: postgres-config # Referencia a "postgres-config.yml"
              key: DB_HOST          # Llave de "postgres-config.yml"
              
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: postgres-config # Referencia a "postgres-config.yml"
              key: DB_PORT          # Llave de "postgres-config.yml"

        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: DB_USER

        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets # Referencia a "postgres-secrets.yml"
              key: DB_PASSWORD       # Llave secret de "postgres-secrets.yml"

        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: JWT_SECRET

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: NodePort

  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3000 # cualquier puerto
      targetPort: 3000
      nodePort: 30300
      